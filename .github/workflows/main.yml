name: Trigger builds

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*' ]

  workflow_dispatch:

env:
  xposed_base_tag: base
  jellyfin_build_platform: portable

jobs:
  calc:
    name: Generate config for building

    runs-on: ubuntu-latest

    steps:
      - name: Fetch jellyfin-web tags
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          git ls-remote -t --sort -v:refname --refs https://github.com/jellyfin/jellyfin-web.git | grep -oE 'v[^/]*$' > tags

      - name: Calculate last jellyfin-web tag
        id: tags
        run: |
          echo "::set-output name=tag_stable::$(grep -E '^v([0-9]+\.)+[0-9]$' tags | head -n 1)"
          echo "::set-output name=tag_unstable::$(grep -E '^v([0-9]+\.)+[0-9]-.*$' tags | head -n 1)"

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'

    outputs:
      tags: >-
        [
        "${{ steps.tags.outputs.tag_stable }}", 
        "${{ steps.tags.outputs.tag_unstable }}"
        ]
      
  build:
    needs: calc

    strategy:
      matrix:
        jellyfin_tag: ${{ fromJSON(needs.calc.outputs.tags) }}

    name: Build jellyfin-web ${{ matrix.jellyfin_tag }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/std4453/jellyfin-xposed
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            prefix=${{ matrix.jellyfin_tag }}-xp-
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache build result
        id: cache-build
        uses: actions/cache@v2
        with:
          # cache based on self sha instead of ref since a push and a tag
          # will trigger two workflows
          key: ${{ github.sha }}-${{ matrix.jellyfin_tag }}-build
          path: ./artifacts/jellyfin-xposed

        # the following steps are based on current sha and produce
        # reproduciable results so they are skipped on cache hit

      - name: Setup git config
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          git config user.email "<>"
          git config user.name "runner"
      
      - name: Remove unnecessary files from history
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: >
          git filter-branch --tree-filter 
          'rm -rf ./README.md ./.gitignore ./github'
          --
          ${{ env.xposed_base_tag }}..HEAD

      - name: Fetch Jellyfin upstream
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          git remote add jellyfin https://github.com/jellyfin/jellyfin-web.git
          git fetch jellyfin --tags

      - name: Rebase onto Jellyfin
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          git rebase --onto ${{ matrix.jellyfin_tag }} ${{ env.xposed_base_tag }} HEAD

      - name: Create artifacts dir
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: mkdir -p artifacts

      - name: Read Jellyfin version from build.yaml
        id: jellyfin-version
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: mikefarah/yq@master
        with:
          cmd: yq eval .version build.yaml
      
      - name: Build Jellyfin web 
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          SOURCE_DIR=. ARTIFACT_DIR=artifacts ./deployment/build.${{ env.jellyfin_build_platform }}

      - name: Extract tarball and rename folder
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./artifacts
        run: |
          tar -xvf ./jellyfin-web_${{ steps.jellyfin-version.outputs.result }}_${{ env.jellyfin_build_platform }}.tar.gz
          mv jellyfin-web_${{ steps.jellyfin-version.outputs.result }} jellyfin-xposed

        # the following steps might vary on ref so cannot be skipped

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./artifacts/jellyfin-xposed
          push: true
          file: ./Dockerfile.Xposed
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create release tarball
        if: github.ref_type == 'tag'
        working-directory: ./artifacts
        run: tar -czvf jellyfin-xposed-${{ matrix.jellyfin_tag }}.tar.gz jellyfin-xposed
      
      - name: Upload tarball to release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          files: ./artifacts/jellyfin-xposed-${{ matrix.jellyfin_tag }}.tar.gz

